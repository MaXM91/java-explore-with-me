CREATE TABLE IF NOT EXISTS users (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email VARCHAR(254) UNIQUE NOT NULL,
name VARCHAR(250) NOT NULL
);

CREATE TABLE IF NOT EXISTS categories (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
annotation VARCHAR(7000) NOT NULL,
category_id BIGINT REFERENCES categories (id),
confirmed_requests INTEGER,
created_on TIMESTAMP WITHOUT TIME ZONE,
description VARCHAR(7000)  NOT NULL,
event_date TIMESTAMP WITHOUT TIME ZONE  NOT NULL,
user_id BIGINT REFERENCES users (id) NOT NULL,
lat DOUBLE PRECISION NOT NULL,
lon DOUBLE PRECISION NOT NULL,
paid BOOLEAN,
participant_limit INTEGER,
published_on TIMESTAMP WITHOUT TIME ZONE,
request_moderation BOOLEAN,
state INTEGER NOT NULL,
title VARCHAR(120) NOT NULL
);

CREATE TABLE IF NOT EXISTS requests (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
created TIMESTAMP WITHOUT TIME ZONE,
event_id BIGINT REFERENCES events (id) ON DELETE CASCADE,
requester_id BIGINT REFERENCES users (id) ON DELETE CASCADE,
status VARCHAR(20),
    UNIQUE (event_id, requester_id)
);

CREATE TABLE IF NOT EXISTS compilations (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
pinned BOOLEAN,
title VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS compilation_events (
compilation_id BIGINT REFERENCES compilations (id) ON DELETE CASCADE,
event_id BIGINT REFERENCES events (id) ON DELETE CASCADE,
    UNIQUE (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS comments (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
text VARCHAR(500) NOT NULL,
registration_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
owner_id BIGINT REFERENCES users (id) NOT NULL,
response_to_id BIGINT REFERENCES users (id),
event_id BIGINT REFERENCES events (id) ON DELETE CASCADE,
    UNIQUE (id, text, event_id)
);

CREATE TABLE IF NOT EXISTS comments_events (
father_comment_id BIGINT REFERENCES comments (id) ON DELETE CASCADE,
son_comment_id BIGINT REFERENCES comments (id) ON DELETE CASCADE,
    UNIQUE (father_comment_id, son_comment_id)
);